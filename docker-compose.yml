version: "3.5"
services:
  # Reverse Proxy using Caddy
  caddy-proxy:
    image: caddy:latest
    container_name: caddy-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/ReverseProxyCaddyFile:/etc/caddy/Caddyfile
      - caddy-data:/data
    environment:
      - DOMAIN
    restart: unless-stopped
    networks:
      - my_network

  # Caddy Webserver for Flutter app
  flup_frontend:
    image: caddy:latest
    container_name: flup_frontend
    hostname: flup_frontend
    volumes:
      - ./frontend/Flup/build/web:/usr/share/caddy
      - ./deployment/FlutterCaddyFile:/etc/caddy/Caddyfile
    networks:
      - my_network
    restart: unless-stopped
    depends_on:
      - caddy-proxy

  # Flup Backend Service
  flup_backend:
    build:
      context : .
      dockerfile: Dockerfile
    image: flup_backend
    container_name: flup_backend
    hostname: flup_backend
    volumes:
      - sqlite-db:/backend/sqlite
    ports:
      - "55555:55555"
    working_dir: /backend
    command: ["dotnet", "run", "--project flup_backend"]
    networks:
      - my_network
    restart: unless-stopped
    depends_on:
      - caddy-proxy

volumes:
  sqlite-db:
  caddy-data:

 # Shared with other compose setups that need to be reached from the reverse proxy
networks:
  my_network:
    name: "my_network"

# # Let other docker-compose files use the same network with:
# networks:
#   my_network:
#     name: "my_network"
#     external: true
